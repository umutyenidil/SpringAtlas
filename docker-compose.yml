services:
  # Postgres Database
  postgres:
    container_name: atlas_postgres
    image: postgres:alpine
    restart: unless-stopped
    ports:
      - '5432:5432'
    environment:
      POSTGRES_DB: atlas
      POSTGRES_USER: umut
      POSTGRES_PASSWORD: umut
    volumes:
      - atlas_postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U umut -d atlas"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - atlas_network

  mongodb:
    container_name: atlas_mongodb
    image: mongo:latest
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: atlas
      MONGO_INITDB_ROOT_USERNAME: umut
      MONGO_INITDB_ROOT_PASSWORD: umut
    volumes:
      - atlas_mongo:/data/db
    healthcheck:
      test: [ "CMD-SHELL", "mongosh --username umut --password umut --eval 'db.adminCommand(\"ping\")' || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - atlas_network

  redis:
    image: redis:latest
    container_name: atlas_redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - atlas_redis:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 5s
    networks:
      - atlas_network

  auth-service:
    container_name: atlas_auth
    build:
      context: ./services/auth
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/atlas
      SPRING_DATASOURCE_USERNAME: umut
      SPRING_DATASOURCE_PASSWORD: umut
    ports:
      - "8090:8090"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "wget", "--spider", "-q", "http://localhost:8090/actuator/health" ]
      interval: 10s
      retries: 10
      start_period: 30s
      timeout: 5s
    networks:
      - atlas_network

  catalog-service:
    container_name: atlas_catalog
    build:
      context: ./services/catalog
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      SPRING_DATA_MONGODB_URI: mongodb://umut:umut@mongodb:27017/atlas?authSource=admin
    ports:
      - "8091:8091"
    depends_on:
      mongodb:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "wget", "--spider", "-q", "http://localhost:8091/actuator/health" ]
      interval: 10s
      retries: 10
      start_period: 30s
      timeout: 5s
    networks:
      - atlas_network

  payment-service:
    container_name: atlas_payment
    build:
      context: ./services/payment
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "8092:8092"
    healthcheck:
      test: [ "CMD", "wget", "--spider", "-q", "http://localhost:8092/actuator/health" ]
      interval: 10s
      retries: 10
      start_period: 30s
      timeout: 5s
    networks:
      - atlas_network

networks:
  atlas_network:
    driver: bridge

# Volumes
volumes:
  atlas_postgres:
    driver: local
  atlas_mongo:
    driver: local
  atlas_redis:
    driver: local